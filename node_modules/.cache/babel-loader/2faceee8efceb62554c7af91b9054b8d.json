{"ast":null,"code":"var _jsxFileName = \"/Users/ramchapagai/Desktop/Portfolio/ram-portfolio/src/components/Joke.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useState, useEffect } from 'react';\nimport JokesSetup from './JokesSetup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Jokes() {\n  _s();\n\n  const url = 'https://v2.jokeapi.dev/joke/Any';\n  const [jokes, setJokes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getJokes = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    setJokes(data);\n    setLoading(false);\n  }; //Get jokes using fetch\n\n\n  useEffect(() => {\n    getJokes();\n  }, [url]);\n\n  const getAnotherJoke = () => {\n    return getJokes();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }, this) :\n    /*#__PURE__*/\n    // <JokesSetup setup={jokes.setup} delivery={jokes.delivery} getAnotherJoke={getAnotherJoke} />\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-light text-center\",\n        children: \"Jokes from Jokes API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"d-block p-2 bg-primary text-white\",\n          children: jokes.setup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"d-block p-2 bg-warning text-white\",\n          children: jokes.delivery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getAnotherJoke,\n        className: \"btn btn-primary btn-lg\",\n        children: \"Next Joke..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Jokes, \"aGfjj4W3bgFVNwAsjjeXOuXMdnc=\");\n\n_c = Jokes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jokes\");","map":{"version":3,"sources":["/Users/ramchapagai/Desktop/Portfolio/ram-portfolio/src/components/Joke.js"],"names":["React","Fragment","useState","useEffect","JokesSetup","Jokes","url","jokes","setJokes","loading","setLoading","getJokes","response","fetch","data","json","getAnotherJoke","setup","delivery"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC3B,QAAMC,GAAG,GAAG,iCAAZ;AACD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMS,QAAQ,GAAG,YAAY;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,CAA5B;AACA,UAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,IAAAA,QAAQ,CAACM,IAAD,CAAR;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GALD,CAL4B,CAY5B;;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACL,GAAD,CAFM,CAAT;;AAKA,QAAMU,cAAc,GAAI,MAAK;AACzB,WACIL,QAAQ,EADZ;AAGH,GAJD;;AAMA,sBACI,QAAC,QAAD;AAAA,cAEKF,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH;AAAA;AAEJ;AAEA,YAAC,QAAD;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEJ;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,mCAAhB;AAAA,oBAAqDF,KAAK,CAACU;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFI,eAKJ;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,mCAAhB;AAAA,oBAAqDV,KAAK,CAACW;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALI,eASJ;AAAQ,QAAA,OAAO,EAAEF,cAAjB;AAAiC,QAAA,SAAS,EAAC,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATI;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAlDuBX,K;;KAAAA,K","sourcesContent":["import React, { Fragment } from 'react'\nimport { useState, useEffect } from 'react'\nimport JokesSetup from './JokesSetup'\n\n\nexport default function Jokes() {\n     const url = 'https://v2.jokeapi.dev/joke/Any'\n    const [jokes, setJokes] = useState([])\n    const [loading, setLoading] = useState(true)\n     \n    const getJokes = async () => {\n        const response = await fetch(url)\n        const data = await response.json()\n        setJokes(data)\n        setLoading(false)\n    }\n\n    //Get jokes using fetch\n\n    useEffect(() => {\n        getJokes()\n    }, [url])\n    \n\n    const getAnotherJoke =  () =>{\n        return(\n            getJokes()\n        )\n    }\n \n    return (\n        <Fragment>\n           \n            {loading ? <h1>Loading...</h1> :\n\n                // <JokesSetup setup={jokes.setup} delivery={jokes.delivery} getAnotherJoke={getAnotherJoke} />\n\n                <Fragment>\n                <h1 className=\"text-light text-center\">Jokes from Jokes API</h1>\n            <p>\n                <span className=\"d-block p-2 bg-primary text-white\">{jokes.setup}</span>\n            </p>\n            <p>\n                <span className=\"d-block p-2 bg-warning text-white\">{jokes.delivery}</span>\n            </p>\n\n            <button onClick={getAnotherJoke} className=\"btn btn-primary btn-lg\">Next Joke..</button> \n            </Fragment>\n            }\n        </Fragment>\n      \n    )\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}