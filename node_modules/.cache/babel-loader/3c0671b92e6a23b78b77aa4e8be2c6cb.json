{"ast":null,"code":"/*\n * Copyright 2020 American Express Travel Related Services Company, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\nimport { useEffect, useRef } from 'react';\nimport { runAsync } from './runAsync';\nimport { computeKey } from './computeKey';\nimport { isLoading } from './queryHelpers';\nimport { useFetchyeContext } from './useFetchyeContext';\nimport { defaultMapOptionsToKey } from './defaultMapOptionsToKey';\n\nconst passInitialData = (value, initialValue, numOfRenders) => numOfRenders === 1 ? value || initialValue : value;\n\nconst useFetchye = function (key) {\n  let {\n    mapOptionsToKey = options => options,\n    ...options\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let fetcher = arguments.length > 2 ? arguments[2] : undefined;\n\n  var _options$initialData2, _options$initialData3, _options$initialData4;\n\n  const {\n    defaultFetcher,\n    useFetchyeSelector,\n    dispatch,\n    fetchClient\n  } = useFetchyeContext();\n  const selectedFetcher = typeof fetcher === 'function' ? fetcher : defaultFetcher;\n  const computedKey = computeKey(key, defaultMapOptionsToKey(mapOptionsToKey(options)));\n  const selectorState = useFetchyeSelector(computedKey.hash); // create a render version manager using refs\n\n  const numOfRenders = useRef(0);\n  numOfRenders.current += 1;\n  useEffect(() => {\n    var _options$initialData;\n\n    if (options.defer || !computedKey) {\n      return;\n    } // If first render and initialData.data exists from SSR then return early\n\n\n    if (numOfRenders.current === 1 && ((_options$initialData = options.initialData) === null || _options$initialData === void 0 ? void 0 : _options$initialData.data)) {\n      return;\n    }\n\n    const {\n      loading,\n      data,\n      error\n    } = selectorState.current;\n\n    if (!loading && !data && !error) {\n      runAsync({\n        dispatch,\n        computedKey,\n        fetcher: selectedFetcher,\n        fetchClient,\n        options\n      });\n    }\n  });\n  return {\n    isLoading: isLoading({\n      loading: selectorState.current.loading,\n      data: selectorState.current.data || ((_options$initialData2 = options.initialData) === null || _options$initialData2 === void 0 ? void 0 : _options$initialData2.data),\n      numOfRenders: numOfRenders.current,\n      options\n    }),\n    error: passInitialData(selectorState.current.error, (_options$initialData3 = options.initialData) === null || _options$initialData3 === void 0 ? void 0 : _options$initialData3.error, numOfRenders.current),\n    data: passInitialData(selectorState.current.data, (_options$initialData4 = options.initialData) === null || _options$initialData4 === void 0 ? void 0 : _options$initialData4.data, numOfRenders.current),\n\n    run() {\n      return runAsync({\n        dispatch,\n        computedKey,\n        fetcher: selectedFetcher,\n        fetchClient,\n        options\n      });\n    }\n\n  };\n};\n\nexport default useFetchye;","map":{"version":3,"sources":["/Users/ramchapagai/Desktop/Portfolio/ram-portfolio/node_modules/fetchye/es/useFetchye.js"],"names":["useEffect","useRef","runAsync","computeKey","isLoading","useFetchyeContext","defaultMapOptionsToKey","passInitialData","value","initialValue","numOfRenders","useFetchye","key","mapOptionsToKey","options","fetcher","_options$initialData2","_options$initialData3","_options$initialData4","defaultFetcher","useFetchyeSelector","dispatch","fetchClient","selectedFetcher","computedKey","selectorState","hash","current","_options$initialData","defer","initialData","data","loading","error","run"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,YAAtB,KAAuCA,YAAY,KAAK,CAAjB,GAAqBF,KAAK,IAAIC,YAA9B,GAA6CD,KAA5G;;AAEA,MAAMG,UAAU,GAAG,UAACC,GAAD,EAGC;AAAA,MAHK;AACvBC,IAAAA,eAAe,GAAGC,OAAO,IAAIA,OADN;AAEvB,OAAGA;AAFoB,GAGL,uEAAhB,EAAgB;AAAA,MAAZC,OAAY;;AAClB,MAAIC,qBAAJ,EAA2BC,qBAA3B,EAAkDC,qBAAlD;;AAEA,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA,kBAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA;AAJI,MAKFjB,iBAAiB,EALrB;AAMA,QAAMkB,eAAe,GAAG,OAAOR,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CI,cAAlE;AACA,QAAMK,WAAW,GAAGrB,UAAU,CAACS,GAAD,EAAMN,sBAAsB,CAACO,eAAe,CAACC,OAAD,CAAhB,CAA5B,CAA9B;AACA,QAAMW,aAAa,GAAGL,kBAAkB,CAACI,WAAW,CAACE,IAAb,CAAxC,CAXkB,CAW0C;;AAE5D,QAAMhB,YAAY,GAAGT,MAAM,CAAC,CAAD,CAA3B;AACAS,EAAAA,YAAY,CAACiB,OAAb,IAAwB,CAAxB;AACA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,oBAAJ;;AAEA,QAAId,OAAO,CAACe,KAAR,IAAiB,CAACL,WAAtB,EAAmC;AACjC;AACD,KALa,CAKZ;;;AAGF,QAAId,YAAY,CAACiB,OAAb,KAAyB,CAAzB,KAA+B,CAACC,oBAAoB,GAAGd,OAAO,CAACgB,WAAhC,MAAiD,IAAjD,IAAyDF,oBAAoB,KAAK,KAAK,CAAvF,GAA2F,KAAK,CAAhG,GAAoGA,oBAAoB,CAACG,IAAxJ,CAAJ,EAAmK;AACjK;AACD;;AAED,UAAM;AACJC,MAAAA,OADI;AAEJD,MAAAA,IAFI;AAGJE,MAAAA;AAHI,QAIFR,aAAa,CAACE,OAJlB;;AAMA,QAAI,CAACK,OAAD,IAAY,CAACD,IAAb,IAAqB,CAACE,KAA1B,EAAiC;AAC/B/B,MAAAA,QAAQ,CAAC;AACPmB,QAAAA,QADO;AAEPG,QAAAA,WAFO;AAGPT,QAAAA,OAAO,EAAEQ,eAHF;AAIPD,QAAAA,WAJO;AAKPR,QAAAA;AALO,OAAD,CAAR;AAOD;AACF,GA3BQ,CAAT;AA4BA,SAAO;AACLV,IAAAA,SAAS,EAAEA,SAAS,CAAC;AACnB4B,MAAAA,OAAO,EAAEP,aAAa,CAACE,OAAd,CAAsBK,OADZ;AAEnBD,MAAAA,IAAI,EAAEN,aAAa,CAACE,OAAd,CAAsBI,IAAtB,KAA+B,CAACf,qBAAqB,GAAGF,OAAO,CAACgB,WAAjC,MAAkD,IAAlD,IAA0Dd,qBAAqB,KAAK,KAAK,CAAzF,GAA6F,KAAK,CAAlG,GAAsGA,qBAAqB,CAACe,IAA3J,CAFa;AAGnBrB,MAAAA,YAAY,EAAEA,YAAY,CAACiB,OAHR;AAInBb,MAAAA;AAJmB,KAAD,CADf;AAOLmB,IAAAA,KAAK,EAAE1B,eAAe,CAACkB,aAAa,CAACE,OAAd,CAAsBM,KAAvB,EAA8B,CAAChB,qBAAqB,GAAGH,OAAO,CAACgB,WAAjC,MAAkD,IAAlD,IAA0Db,qBAAqB,KAAK,KAAK,CAAzF,GAA6F,KAAK,CAAlG,GAAsGA,qBAAqB,CAACgB,KAA1J,EAAiKvB,YAAY,CAACiB,OAA9K,CAPjB;AAQLI,IAAAA,IAAI,EAAExB,eAAe,CAACkB,aAAa,CAACE,OAAd,CAAsBI,IAAvB,EAA6B,CAACb,qBAAqB,GAAGJ,OAAO,CAACgB,WAAjC,MAAkD,IAAlD,IAA0DZ,qBAAqB,KAAK,KAAK,CAAzF,GAA6F,KAAK,CAAlG,GAAsGA,qBAAqB,CAACa,IAAzJ,EAA+JrB,YAAY,CAACiB,OAA5K,CARhB;;AAULO,IAAAA,GAAG,GAAG;AACJ,aAAOhC,QAAQ,CAAC;AACdmB,QAAAA,QADc;AAEdG,QAAAA,WAFc;AAGdT,QAAAA,OAAO,EAAEQ,eAHK;AAIdD,QAAAA,WAJc;AAKdR,QAAAA;AALc,OAAD,CAAf;AAOD;;AAlBI,GAAP;AAqBD,CAnED;;AAqEA,eAAeH,UAAf","sourcesContent":["/*\n * Copyright 2020 American Express Travel Related Services Company, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\nimport { useEffect, useRef } from 'react';\nimport { runAsync } from './runAsync';\nimport { computeKey } from './computeKey';\nimport { isLoading } from './queryHelpers';\nimport { useFetchyeContext } from './useFetchyeContext';\nimport { defaultMapOptionsToKey } from './defaultMapOptionsToKey';\n\nconst passInitialData = (value, initialValue, numOfRenders) => numOfRenders === 1 ? value || initialValue : value;\n\nconst useFetchye = (key, {\n  mapOptionsToKey = options => options,\n  ...options\n} = {}, fetcher) => {\n  var _options$initialData2, _options$initialData3, _options$initialData4;\n\n  const {\n    defaultFetcher,\n    useFetchyeSelector,\n    dispatch,\n    fetchClient\n  } = useFetchyeContext();\n  const selectedFetcher = typeof fetcher === 'function' ? fetcher : defaultFetcher;\n  const computedKey = computeKey(key, defaultMapOptionsToKey(mapOptionsToKey(options)));\n  const selectorState = useFetchyeSelector(computedKey.hash); // create a render version manager using refs\n\n  const numOfRenders = useRef(0);\n  numOfRenders.current += 1;\n  useEffect(() => {\n    var _options$initialData;\n\n    if (options.defer || !computedKey) {\n      return;\n    } // If first render and initialData.data exists from SSR then return early\n\n\n    if (numOfRenders.current === 1 && ((_options$initialData = options.initialData) === null || _options$initialData === void 0 ? void 0 : _options$initialData.data)) {\n      return;\n    }\n\n    const {\n      loading,\n      data,\n      error\n    } = selectorState.current;\n\n    if (!loading && !data && !error) {\n      runAsync({\n        dispatch,\n        computedKey,\n        fetcher: selectedFetcher,\n        fetchClient,\n        options\n      });\n    }\n  });\n  return {\n    isLoading: isLoading({\n      loading: selectorState.current.loading,\n      data: selectorState.current.data || ((_options$initialData2 = options.initialData) === null || _options$initialData2 === void 0 ? void 0 : _options$initialData2.data),\n      numOfRenders: numOfRenders.current,\n      options\n    }),\n    error: passInitialData(selectorState.current.error, (_options$initialData3 = options.initialData) === null || _options$initialData3 === void 0 ? void 0 : _options$initialData3.error, numOfRenders.current),\n    data: passInitialData(selectorState.current.data, (_options$initialData4 = options.initialData) === null || _options$initialData4 === void 0 ? void 0 : _options$initialData4.data, numOfRenders.current),\n\n    run() {\n      return runAsync({\n        dispatch,\n        computedKey,\n        fetcher: selectedFetcher,\n        fetchClient,\n        options\n      });\n    }\n\n  };\n};\n\nexport default useFetchye;"]},"metadata":{},"sourceType":"module"}