{"ast":null,"code":"/*\n * Copyright 2020 American Express Travel Related Services Company, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\nimport { useContext, useReducer } from 'react'; // eslint-disable-next-line import/no-unresolved\n\nimport { defaultFetcher as libraryFetcher, FetchyeContext } from 'fetchye-core';\nimport SimpleCache from './SimpleCache';\nexport const useFetchyeContext = function () {\n  let fallbacks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    fallbackFetchClient = fetch,\n    fallbackCache = SimpleCache(),\n    fallbackFetcher = libraryFetcher\n  } = fallbacks; // Setup headless mode fallbacks\n\n  const [state, fallbackDispatch] = useReducer(fallbackCache.reducer, fallbackCache.reducer(undefined, {\n    type: ''\n  }));\n\n  const fallbackUseFetchyeSelector = hash => ({\n    current: fallbackCache.getCacheByKey(state, hash)\n  });\n\n  const providedContext = useContext(FetchyeContext);\n  const {\n    cache = fallbackCache,\n    defaultFetcher = fallbackFetcher,\n    useFetchyeSelector = fallbackUseFetchyeSelector,\n    dispatch = fallbackDispatch,\n    fetchClient = fallbackFetchClient\n  } = providedContext || {};\n  return {\n    cache,\n    defaultFetcher,\n    useFetchyeSelector,\n    dispatch,\n    fetchClient,\n    headless: true\n  };\n};\nexport default useFetchyeContext;","map":{"version":3,"sources":["/Users/ramchapagai/Desktop/Portfolio/ram-portfolio/node_modules/fetchye/es/useFetchyeContext.js"],"names":["useContext","useReducer","defaultFetcher","libraryFetcher","FetchyeContext","SimpleCache","useFetchyeContext","fallbacks","fallbackFetchClient","fetch","fallbackCache","fallbackFetcher","state","fallbackDispatch","reducer","undefined","type","fallbackUseFetchyeSelector","hash","current","getCacheByKey","providedContext","cache","useFetchyeSelector","dispatch","fetchClient","headless"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,OAAvC,C,CAAgD;;AAEhD,SAASC,cAAc,IAAIC,cAA3B,EAA2CC,cAA3C,QAAiE,cAAjE;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,MAAMC,iBAAiB,GAAG,YAAoB;AAAA,MAAnBC,SAAmB,uEAAP,EAAO;AACnD,QAAM;AACJC,IAAAA,mBAAmB,GAAGC,KADlB;AAEJC,IAAAA,aAAa,GAAGL,WAAW,EAFvB;AAGJM,IAAAA,eAAe,GAAGR;AAHd,MAIFI,SAJJ,CADmD,CAKpC;;AAEf,QAAM,CAACK,KAAD,EAAQC,gBAAR,IAA4BZ,UAAU,CAACS,aAAa,CAACI,OAAf,EAAwBJ,aAAa,CAACI,OAAd,CAAsBC,SAAtB,EAAiC;AACnGC,IAAAA,IAAI,EAAE;AAD6F,GAAjC,CAAxB,CAA5C;;AAIA,QAAMC,0BAA0B,GAAGC,IAAI,KAAK;AAC1CC,IAAAA,OAAO,EAAET,aAAa,CAACU,aAAd,CAA4BR,KAA5B,EAAmCM,IAAnC;AADiC,GAAL,CAAvC;;AAIA,QAAMG,eAAe,GAAGrB,UAAU,CAACI,cAAD,CAAlC;AACA,QAAM;AACJkB,IAAAA,KAAK,GAAGZ,aADJ;AAEJR,IAAAA,cAAc,GAAGS,eAFb;AAGJY,IAAAA,kBAAkB,GAAGN,0BAHjB;AAIJO,IAAAA,QAAQ,GAAGX,gBAJP;AAKJY,IAAAA,WAAW,GAAGjB;AALV,MAMFa,eAAe,IAAI,EANvB;AAOA,SAAO;AACLC,IAAAA,KADK;AAELpB,IAAAA,cAFK;AAGLqB,IAAAA,kBAHK;AAILC,IAAAA,QAJK;AAKLC,IAAAA,WALK;AAMLC,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD,CA/BM;AAgCP,eAAepB,iBAAf","sourcesContent":["/*\n * Copyright 2020 American Express Travel Related Services Company, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\nimport { useContext, useReducer } from 'react'; // eslint-disable-next-line import/no-unresolved\n\nimport { defaultFetcher as libraryFetcher, FetchyeContext } from 'fetchye-core';\nimport SimpleCache from './SimpleCache';\nexport const useFetchyeContext = (fallbacks = {}) => {\n  const {\n    fallbackFetchClient = fetch,\n    fallbackCache = SimpleCache(),\n    fallbackFetcher = libraryFetcher\n  } = fallbacks; // Setup headless mode fallbacks\n\n  const [state, fallbackDispatch] = useReducer(fallbackCache.reducer, fallbackCache.reducer(undefined, {\n    type: ''\n  }));\n\n  const fallbackUseFetchyeSelector = hash => ({\n    current: fallbackCache.getCacheByKey(state, hash)\n  });\n\n  const providedContext = useContext(FetchyeContext);\n  const {\n    cache = fallbackCache,\n    defaultFetcher = fallbackFetcher,\n    useFetchyeSelector = fallbackUseFetchyeSelector,\n    dispatch = fallbackDispatch,\n    fetchClient = fallbackFetchClient\n  } = providedContext || {};\n  return {\n    cache,\n    defaultFetcher,\n    useFetchyeSelector,\n    dispatch,\n    fetchClient,\n    headless: true\n  };\n};\nexport default useFetchyeContext;"]},"metadata":{},"sourceType":"module"}