{"ast":null,"code":"/*\n * Copyright 2020 American Express Travel Related Services Company, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\nimport computeHash from 'object-hash';\nimport mapHeaderNamesToLowerCase from './mapHeaderNamesToLowerCase';\nexport const computeKey = (key, options) => {\n  const {\n    headers,\n    ...restOfOptions\n  } = options;\n  const nextOptions = { ...restOfOptions\n  };\n\n  if (headers) {\n    nextOptions.headers = mapHeaderNamesToLowerCase(headers);\n  }\n\n  if (typeof key === 'function') {\n    let nextKey;\n\n    try {\n      nextKey = key(nextOptions);\n    } catch (error) {\n      return false;\n    }\n\n    if (!nextKey) {\n      return false;\n    }\n\n    return {\n      key: nextKey,\n      hash: computeHash([nextKey, nextOptions], {\n        respectType: false\n      })\n    };\n  }\n\n  return {\n    key,\n    hash: computeHash([key, nextOptions], {\n      respectType: false\n    })\n  };\n};\nexport default computeKey;","map":{"version":3,"sources":["/Users/ramchapagai/Desktop/Portfolio/ram-portfolio/node_modules/fetchye/es/computeKey.js"],"names":["computeHash","mapHeaderNamesToLowerCase","computeKey","key","options","headers","restOfOptions","nextOptions","nextKey","error","hash","respectType"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,WAAP,MAAwB,aAAxB;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC1C,QAAM;AACJC,IAAAA,OADI;AAEJ,OAAGC;AAFC,MAGFF,OAHJ;AAIA,QAAMG,WAAW,GAAG,EAAE,GAAGD;AAAL,GAApB;;AAGA,MAAID,OAAJ,EAAa;AACXE,IAAAA,WAAW,CAACF,OAAZ,GAAsBJ,yBAAyB,CAACI,OAAD,CAA/C;AACD;;AAED,MAAI,OAAOF,GAAP,KAAe,UAAnB,EAA+B;AAC7B,QAAIK,OAAJ;;AAEA,QAAI;AACFA,MAAAA,OAAO,GAAGL,GAAG,CAACI,WAAD,CAAb;AACD,KAFD,CAEE,OAAOE,KAAP,EAAc;AACd,aAAO,KAAP;AACD;;AAED,QAAI,CAACD,OAAL,EAAc;AACZ,aAAO,KAAP;AACD;;AAED,WAAO;AACLL,MAAAA,GAAG,EAAEK,OADA;AAELE,MAAAA,IAAI,EAAEV,WAAW,CAAC,CAACQ,OAAD,EAAUD,WAAV,CAAD,EAAyB;AACxCI,QAAAA,WAAW,EAAE;AAD2B,OAAzB;AAFZ,KAAP;AAMD;;AAED,SAAO;AACLR,IAAAA,GADK;AAELO,IAAAA,IAAI,EAAEV,WAAW,CAAC,CAACG,GAAD,EAAMI,WAAN,CAAD,EAAqB;AACpCI,MAAAA,WAAW,EAAE;AADuB,KAArB;AAFZ,GAAP;AAMD,CAvCM;AAwCP,eAAeT,UAAf","sourcesContent":["/*\n * Copyright 2020 American Express Travel Related Services Company, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\nimport computeHash from 'object-hash';\nimport mapHeaderNamesToLowerCase from './mapHeaderNamesToLowerCase';\nexport const computeKey = (key, options) => {\n  const {\n    headers,\n    ...restOfOptions\n  } = options;\n  const nextOptions = { ...restOfOptions\n  };\n\n  if (headers) {\n    nextOptions.headers = mapHeaderNamesToLowerCase(headers);\n  }\n\n  if (typeof key === 'function') {\n    let nextKey;\n\n    try {\n      nextKey = key(nextOptions);\n    } catch (error) {\n      return false;\n    }\n\n    if (!nextKey) {\n      return false;\n    }\n\n    return {\n      key: nextKey,\n      hash: computeHash([nextKey, nextOptions], {\n        respectType: false\n      })\n    };\n  }\n\n  return {\n    key,\n    hash: computeHash([key, nextOptions], {\n      respectType: false\n    })\n  };\n};\nexport default computeKey;"]},"metadata":{},"sourceType":"module"}