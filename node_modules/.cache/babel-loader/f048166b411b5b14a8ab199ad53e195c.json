{"ast":null,"code":"var _jsxFileName = \"/Users/ramchapagai/Desktop/Portfolio/ram-portfolio/src/components/Skills.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Skills() {\n  _s();\n\n  const skills = [\"C#\", \"Java\", \"React\", \"Spring Boot\", \"AWS\", \"CI/CD\", \"JavaScript\", \"Python\", \"HTML\", \"CSS\", \"Bootstrap\", \"SDLC\", \"Git\"];\n  const [programmingLang, setProgrammingLang] = useState('Loading...');\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProgrammingLang(skills[Math.floor(Math.random() * skills.length)]);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"familiar\",\n      className: \"bg-dark text-center text-white\",\n      children: [\"I'm familiar with : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 35\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'lime',\n          fontWeight\n        },\n        children: programmingLang\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Skills, \"3gn22wKoY+hbcntftzUEhMs+oRY=\");\n\n_c = Skills;\nexport default Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"sources":["/Users/ramchapagai/Desktop/Portfolio/ram-portfolio/src/components/Skills.js"],"names":["React","Fragment","useEffect","useState","Skills","skills","programmingLang","setProgrammingLang","interval","setInterval","Math","floor","random","length","clearInterval","color","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAEd,QAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,MAAP,EAAe,OAAf,EAAwB,aAAxB,EAAuC,KAAvC,EAA6C,OAA7C,EAAsD,YAAtD,EAAoE,QAApE,EAA8E,MAA9E,EAAsF,KAAtF,EAA6F,WAA7F,EAA0G,MAA1G,EAAkH,KAAlH,CAAf;AAEA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,YAAD,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BF,MAAAA,kBAAkB,CAACF,MAAM,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,MAAM,CAACQ,MAAlC,CAAD,CAAP,CAAlB;AACH,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAMC,aAAa,CAACN,QAAD,CAA1B;AACH,GALQ,EAKN,EALM,CAAT;AAQA,sBACI,QAAC,QAAD;AAAA,2BAEI;AAAI,MAAA,EAAE,EAAC,UAAP;AAAkB,MAAA,SAAS,EAAC,gCAA5B;AAAA,sDACsB;AAAA;AAAA;AAAA;AAAA,cADtB,oBAC4B;AAAM,QAAA,KAAK,EAAE;AAACO,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA;AAAf,SAAb;AAAA,kBAA0CV;AAA1C;AAAA;AAAA;AAAA;AAAA,cAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAtBQF,M;;KAAAA,M;AAwBT,eAAeA,MAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport { useState } from 'react'\n\nfunction Skills() {\n\n    const skills = [\"C#\", \"Java\", \"React\", \"Spring Boot\", \"AWS\",\"CI/CD\", \"JavaScript\", \"Python\", \"HTML\", \"CSS\", \"Bootstrap\", \"SDLC\", \"Git\"];\n\n    const [programmingLang, setProgrammingLang] = useState('Loading...')\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setProgrammingLang(skills[Math.floor(Math.random() * skills.length)])\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n\n    return (\n        <Fragment>\n            \n            <h2 id=\"familiar\" className=\"bg-dark text-center text-white\">\n              I'm familiar with : <br/> <span style={{color:'lime', fontWeight}}>{programmingLang}</span>\n            </h2>\n        </Fragment>\n    )\n}\n\nexport default Skills\n"]},"metadata":{},"sourceType":"module"}