"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.useFetchyeContext = void 0;

var _react = require("react");

var _fetchyeCore = require("fetchye-core");

var _SimpleCache = _interopRequireDefault(require("./SimpleCache"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright 2020 American Express Travel Related Services Company, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
// eslint-disable-next-line import/no-unresolved
const useFetchyeContext = (fallbacks = {}) => {
  const {
    fallbackFetchClient = fetch,
    fallbackCache = (0, _SimpleCache.default)(),
    fallbackFetcher = _fetchyeCore.defaultFetcher
  } = fallbacks; // Setup headless mode fallbacks

  const [state, fallbackDispatch] = (0, _react.useReducer)(fallbackCache.reducer, fallbackCache.reducer(undefined, {
    type: ''
  }));

  const fallbackUseFetchyeSelector = hash => ({
    current: fallbackCache.getCacheByKey(state, hash)
  });

  const providedContext = (0, _react.useContext)(_fetchyeCore.FetchyeContext);
  const {
    cache = fallbackCache,
    defaultFetcher = fallbackFetcher,
    useFetchyeSelector = fallbackUseFetchyeSelector,
    dispatch = fallbackDispatch,
    fetchClient = fallbackFetchClient
  } = providedContext || {};
  return {
    cache,
    defaultFetcher,
    useFetchyeSelector,
    dispatch,
    fetchClient,
    headless: true
  };
};

exports.useFetchyeContext = useFetchyeContext;
var _default = useFetchyeContext;
exports.default = _default;